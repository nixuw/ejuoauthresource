---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wuxin.
--- DateTime: 2019-12-02 18:12
---

local httpmod = require "resty.http"
local cjson = require "cjson.safe"

local kong = kong

local ejuoauthresource = {}
ejuoauthresource.VERSION = "1.0"
ejuoauthresource.PRIORITY=200




function ejuoauthresource:access(conf)

   -- 如果其它插件设置了这个标志，则表示无需再作任何处理
    if ngx.ctx.eju_dont_do_anything then
        return
    end



    -- 获取token
    local authorization = ngx.req.get_headers()[conf.tokenHeaderName]
    if not authorization then
       return kong.response.exit(ngx.HTTP_FORBIDDEN, { message = "Your Request is not allowed" })
    end


    -- 解析token
    local match,err = ngx.re.match(authorization,"Bearer (.*)","jio")
    if  err  or not  match  or not match[1] then
        return kong.response.exit(ngx.HTTP_FORBIDDEN, { message = "Your token is invalid" })
    end

    local token = match[1]


    -- 去验证token
    local base64 = ngx.encode_base64(conf.resourceId .. conf.resourceSecret)


    -- 如果授权服务器也走了该插件，则能过break跳过请求授权服务器，避免死循环
    if not ngx.req.get_uri_args()["break"] then
        local http = httpmod:new()

        local res, err = http:request_uri(conf.tokenValidURL, {
            method = "GET",
            headers = {
                ["Content-Type"] = "application/x-www-form-urlencoded",
                ["Authorization"] = "Basic ".. base64,
                -- ["Accept"] = "application/json"
            },

            query = "break=1&token="..token,

            keepalive_timeout = 60,
            keepalive_pool = 10
        })


        if  err or resp.status ~= ngx.HTTP_OK then
            return kong.response.exit(ngx.HTTP_FORBIDDEN, { message = "authorization server failed" })
        end

        -- 把结果做为请求参数，传给服务提供者
        local args = ngx.req.get_uri_args()
        args["authctx"] = resp.body
        ngx.req.set_uri_args(args)

        http:close()
    else
        kong.log.err(cjson.encode(ngx.req.get_uri_args()))
    end

end



return ejuoauthresource